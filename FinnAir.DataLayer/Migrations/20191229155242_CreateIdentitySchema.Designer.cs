// <auto-generated />
using System;
using FinnAir.DataLayer.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FinnAir.DataLayer.Migrations
{
    [DbContext(typeof(FinnAirContext))]
    [Migration("20191229155242_CreateIdentitySchema")]
    partial class CreateIdentitySchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("FinnAir.DataLayer.Model.Booking", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6);

                    b.HasKey("Id");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = "FIN123"
                        },
                        new
                        {
                            Id = "FIN124"
                        },
                        new
                        {
                            Id = "FIN125"
                        },
                        new
                        {
                            Id = "FIN126"
                        },
                        new
                        {
                            Id = "FIN127"
                        },
                        new
                        {
                            Id = "FIN128"
                        });
                });

            modelBuilder.Entity("FinnAir.DataLayer.Model.BookingFlight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BookingId");

                    b.Property<int>("FlightId");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("FlightId");

                    b.ToTable("BookingFlights");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookingId = "FIN123",
                            FlightId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookingId = "FIN124",
                            FlightId = 3
                        },
                        new
                        {
                            Id = 3,
                            BookingId = "FIN124",
                            FlightId = 2
                        },
                        new
                        {
                            Id = 4,
                            BookingId = "FIN125",
                            FlightId = 1
                        },
                        new
                        {
                            Id = 5,
                            BookingId = "FIN125",
                            FlightId = 4
                        });
                });

            modelBuilder.Entity("FinnAir.DataLayer.Model.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ArrivalAirport")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("ArrivalAirportCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<DateTime>("ArrivalDate");

                    b.Property<string>("CarrierCode")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("DepartureAirport")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("DepartureAirportCode")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<DateTime>("DepartureDate");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArrivalAirport = "Brussel",
                            ArrivalAirportCode = "BRU",
                            ArrivalDate = new DateTime(2019, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CarrierCode = "W12",
                            DepartureAirport = "Stuttgart",
                            DepartureAirportCode = "STU",
                            DepartureDate = new DateTime(2019, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlightNumber = "FA2490"
                        },
                        new
                        {
                            Id = 2,
                            ArrivalAirport = "Brussel",
                            ArrivalAirportCode = "BRU",
                            ArrivalDate = new DateTime(2019, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CarrierCode = "A11",
                            DepartureAirport = "Stuttgart",
                            DepartureAirportCode = "STU",
                            DepartureDate = new DateTime(2019, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlightNumber = "FA2490"
                        },
                        new
                        {
                            Id = 3,
                            ArrivalAirport = "Brussel",
                            ArrivalAirportCode = "BRU",
                            ArrivalDate = new DateTime(2019, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CarrierCode = "B13",
                            DepartureAirport = "Stuttgart",
                            DepartureAirportCode = "STU",
                            DepartureDate = new DateTime(2019, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlightNumber = "FA2490"
                        },
                        new
                        {
                            Id = 4,
                            ArrivalAirport = "Brussel",
                            ArrivalAirportCode = "BRU",
                            ArrivalDate = new DateTime(2019, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CarrierCode = "C15",
                            DepartureAirport = "Stuttgart",
                            DepartureAirportCode = "STU",
                            DepartureDate = new DateTime(2019, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlightNumber = "FA2490"
                        });
                });

            modelBuilder.Entity("FinnAir.DataLayer.Model.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BookingId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(225);

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(225);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(225);

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Passengers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookingId = "FIN123",
                            Email = "gbengaoluyide@gmail.com",
                            Firstname = "Gbenga",
                            LastName = "Oluyide"
                        },
                        new
                        {
                            Id = 2,
                            BookingId = "FIN124",
                            Email = "sadeoluyide@gmail.com",
                            Firstname = "Sade",
                            LastName = "Oluyide"
                        },
                        new
                        {
                            Id = 3,
                            BookingId = "FIN125",
                            Email = "gbade@gmail.com",
                            Firstname = "Gbade",
                            LastName = "Oluyide"
                        },
                        new
                        {
                            Id = 4,
                            BookingId = "FIN126",
                            Email = "bayo@gmail.com",
                            Firstname = "Bayo",
                            LastName = "Oluyide"
                        },
                        new
                        {
                            Id = 5,
                            BookingId = "FIN127",
                            Email = "biibire@gmail.com",
                            Firstname = "Biibire",
                            LastName = "Oluyide"
                        },
                        new
                        {
                            Id = 6,
                            BookingId = "FIN128",
                            Email = "omolaraoluyide@gmail.com",
                            Firstname = "Omolara",
                            LastName = "Oluyide"
                        });
                });

            modelBuilder.Entity("FinnAir.DataLayer.Model.BookingFlight", b =>
                {
                    b.HasOne("FinnAir.DataLayer.Model.Booking", "Booking")
                        .WithMany("BookingFlight")
                        .HasForeignKey("BookingId");

                    b.HasOne("FinnAir.DataLayer.Model.Flight", "Flight")
                        .WithMany("BookingFlight")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FinnAir.DataLayer.Model.Passenger", b =>
                {
                    b.HasOne("FinnAir.DataLayer.Model.Booking", "Booking")
                        .WithMany("Passenger")
                        .HasForeignKey("BookingId");
                });
#pragma warning restore 612, 618
        }
    }
}
